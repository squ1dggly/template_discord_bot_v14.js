{
	"Prefix Command": {
		"scope": "javascript",
		"prefix": "cmd",
		"body": [
			"const { Client, Message } = require(\"discord.js\");",
			"const { BetterEmbed } = require(\"../utils/discordTools\");",
			"const jt = require(\"../utils/jsTools\");\n",

			"/** @type {import(\"../configs/typedefs\").PrefixCommandExports} */",
			"module.exports = {",
			"    name: \"${1:cookie}\",",
			"    description: \"${2:Get a cookie or a glass of milk}\",",
			"    category: \"Fun\",\n",

			"    options: { icon: \"🍪\" },\n",

			"    /** @param {Client} client @param {Message} message @param {import(\"../configs/typedefs\").PrefixCommandExtra} extra */",
			"    execute: async (client, message) => {",
			"        // Create an array of responses",
			"        let choices = [",
			"            \"What's up, **\\$USER_NAME**! Have a cookie! :cookie:\",",
			"            \"Hey, **\\$USER_NAME**! Have a glass of milk! :milk:\"",
			"        ];\n",

			"        // Create the embed :: { COOKIE }",
			"        let embed_${1:cookie} = new BetterEmbed({",
			"            author: { user: message.author },",
			"            description: jt.choice(choices)",
			"        });\n",

			"        // Reply to the user with the embed",
			"        return await embed_${1:cookie}.send(message, { allowedMentions: { repliedUser: false } });$0",
			"    }",
			"};",
			""
		]
	},

	"Prefix Command (Perms)": {
		"scope": "javascript",
		"prefix": "cmd.perms",
		"body": [
			"const { Client, PermissionFlagsBits, Message } = require(\"discord.js\");",
			"const { BetterEmbed } = require(\"../utils/discordTools\");",
			"const jt = require(\"../utils/jsTools\");\n",

			"/** @type {import(\"../configs/typedefs\").PrefixCommandExports} */",
			"module.exports = {",
			"    name: \"${1:cookie}\",",
			"    description: \"${2:Get a cookie or a glass of milk}\",",
			"    category: \"Fun\",\n",

			"    options: { ",
			"    	icon: \"🍪\",",
			"    	specialUserPerms: [PermissionFlagsBits.ViewAuditLog],",
			"    	specialBotPerms: [PermissionFlagsBits.ManageGuild]",
			"    },\n",

			"    /** @param {Client} client @param {Message} message @param {import(\"../configs/typedefs\").PrefixCommandExtra} extra */",
			"    execute: async (client, message) => {",
			"        // Create an array of responses",
			"        let choices = [",
			"            \"What's up, **\\$USER_NAME**! Have a cookie! :cookie:\",",
			"            \"Hey, **\\$USER_NAME**! Have a glass of milk! :milk:\"",
			"        ];\n",

			"        // Create the embed :: { COOKIE }",
			"        let embed_${1:cookie} = new BetterEmbed({",
			"            author: { user: message.author },",
			"            description: jt.choice(choices)",
			"        });\n",

			"        // Reply to the user with the embed",
			"        return await embed_${1:cookie}.send(message, { allowedMentions: { repliedUser: false } });$0",
			"    }",
			"};",
			""
		]
	},

	"Slash Command": {
		"scope": "javascript",
		"prefix": "cmd.slash",
		"body": [
			"const { Client, CommandInteraction, SlashCommandBuilder } = require(\"discord.js\");",
			"const { BetterEmbed } = require(\"../utils/discordTools\");",
			"const jt = require(\"../utils/jsTools\");\n",

			"/** @type {import(\"../configs/typedefs\").SlashCommandExports} */",
			"module.exports = {",
			"    category: \"Fun\",",
			"    options: { icon: \"🍪\" },\n",

			"    // prettier-ignore",
			"    builder: new SlashCommandBuilder().setName(\"${1:cookie}\")",
			"        .setDescription(\"${2:Get a cookie or a glass of milk}\"),\n",

			"    /** @param {Client} client @param {CommandInteraction} interaction */",
			"    execute: async (client, interaction) => {",
			"        // Create an array of responses",
			"        let choices = [",
			"            \"What's up, **\\$USER_NAME**! Have a cookie! :cookie:\",",
			"            \"Hey, **\\$USER_NAME**! Have a glass of milk! :milk:\"",
			"        ];\n",

			"        // Create the embed :: { COOKIE }",
			"        let embed_${1:cookie} = new BetterEmbed({",
			"            context: { interaction },",
			"            description: jt.choice(choices)",
			"        });\n",

			"        // Reply to the interaction with the embed",
			"        return await embed_${1:cookie}.send(interaction);$0",
			"    }",
			"};",
			""
		]
	},

	"Slash Command (Perms)": {
		"scope": "javascript",
		"prefix": "cmd.slash.perms",
		"body": [
			"const { Client, PermissionFlagsBits, CommandInteraction, SlashCommandBuilder } = require(\"discord.js\");",
			"const { BetterEmbed } = require(\"../utils/discordTools\");",
			"const jt = require(\"../utils/jsTools\");\n",

			"/** @type {import(\"../configs/typedefs\").SlashCommandExports} */",
			"module.exports = {",
			"    category: \"Fun\",\n",

			"    options: { ",
			"    	icon: \"🍪\",",
			"    	specialUserPerms: [PermissionFlagsBits.ViewAuditLog],",
			"    	specialBotPerms: [PermissionFlagsBits.ManageGuild]",
			"    },\n",

			"    // prettier-ignore",
			"    builder: new SlashCommandBuilder().setName(\"${1:cookie}\")",
			"        .setDescription(\"${2:Get a cookie or a glass of milk}\"),\n",

			"    /** @param {Client} client @param {CommandInteraction} interaction */",
			"    execute: async (client, interaction) => {",
			"        // Create an array of responses",
			"        let choices = [",
			"            \"What's up, **\\$USER_NAME**! Have a cookie! :cookie:\",",
			"            \"Hey, **\\$USER_NAME**! Have a glass of milk! :milk:\"",
			"        ];\n",

			"        // Create the embed :: { COOKIE }",
			"        let embed_${1:cookie} = new BetterEmbed({",
			"            context: { interaction },",
			"            description: jt.choice(choices)",
			"        });\n",

			"        // Reply to the interaction with the embed",
			"        return await embed_${1:cookie}.send(interaction);$0",
			"    }",
			"};",
			""
		]
	},

	"Raw Command": {
		"scope": "javascript",
		"prefix": "cmd.raw",
		"body": [
			"const { Client, CommandInteraction } = require(\"discord.js\");",
			"const { BetterEmbed } = require(\"../utils/discordTools\");",
			"const jt = require(\"../utils/jsTools\");\n",

			"/** @type {import(\"../configs/typedefs\").RawCommandExports} */",
			"module.exports = {",
			"    category: \"Fun\",",
			"    options: { icon: \"🍪\" },\n",

			"    commandData: {",
			"    	name: \"${1:cookie}\",",
			"    	description: \"${2:Get a cookie or a glass of milk}\",",
			"    	type: 1,",
			"    	integration_types: [0, 1],",
			"    	context: [0, 1, 2],",
			"    },\n",

			"    /** @param {Client} client @param {CommandInteraction} interaction */",
			"    execute: async (client, interaction) => {",
			"        // Create an array of responses",
			"        let choices = [",
			"            \"What's up, **\\$USER_NAME**! Have a cookie! :cookie:\",",
			"            \"Hey, **\\$USER_NAME**! Have a glass of milk! :milk:\"",
			"        ];\n",

			"        // Create the embed :: { COOKIE }",
			"        let embed_${1:cookie} = new BetterEmbed({",
			"            context: { interaction },",
			"            description: jt.choice(choices)",
			"        });\n",

			"        // Reply to the interaction with the embed",
			"        return await embed_${1:cookie}.send(interaction);$0",
			"    }",
			"};",
			""
		]
	}
}
